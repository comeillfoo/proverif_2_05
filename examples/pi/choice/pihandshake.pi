(*************************************************************
 *                                                           *
 *  Cryptographic protocol verifier                          *
 *                                                           *
 *  Bruno Blanchet, Vincent Cheval, and Marc Sylvestre       *
 *                                                           *
 *  Copyright (C) INRIA, CNRS 2000-2023                      *
 *                                                           *
 *************************************************************)

(*

    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details (in file LICENSE).

    You should have received a copy of the GNU General Public License along
    with this program; if not, write to the Free Software Foundation, Inc.,
    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

*)
(* Handshake protocol.
   Taken from Delaune, Jacquemard, LSV-04-1 *)

(* shared-key encryption as equation *)

fun encrypt/2.
fun decrypt/2.
equation decrypt(encrypt(x,y),y) = x.
equation encrypt(decrypt(x,y),y) = x.

(* addition of one *)

fun f/1.

free c.
private free pw.

let processA =
	new N;
	out(c, encrypt(N, pw)).

let processB =
	in(c, x);
	let y = decrypt(x, pw) in
	out(c, encrypt(f(y), pw)).

process
	((!processA) | (!processB) |
	(phase 1;
	new w;
	out(c, choice[w,pw])))

(* EXPECTPV
RESULT Observational equivalence cannot be proved.
0.008s (user 0.008s + system 0.000s), max rss 8800K
END *)
