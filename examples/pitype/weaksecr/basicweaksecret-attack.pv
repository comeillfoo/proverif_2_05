(*************************************************************
 *                                                           *
 *  Cryptographic protocol verifier                          *
 *                                                           *
 *  Bruno Blanchet, Vincent Cheval, and Marc Sylvestre       *
 *                                                           *
 *  Copyright (C) INRIA, CNRS 2000-2023                      *
 *                                                           *
 *************************************************************)

(*

    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details (in file LICENSE).

    You should have received a copy of the GNU General Public License along
    with this program; if not, write to the Free Software Foundation, Inc.,
    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

*)
(* Basic weak secret example, from JLAP paper
   First version, with an attack *)

type skey.
type pkey.
type passwd.

(* public-key encryption *)

fun pk(skey): pkey.
fun penc(bitstring, pkey): bitstring.
fun pdec(bitstring, skey): bitstring.
equation forall x: bitstring, y: skey;  pdec(penc(x, pk(y)), y) = x.

(* Hash function *)

fun h(passwd): bitstring.

free c: channel.
free w: passwd [private].

weaksecret w.

process
	new s: skey;
	out(c, pk(s));
	out(c, penc(h(w), pk(s)))


(* EXPECTPV
RESULT Weak secret w is false.
0.017s (user 0.010s + system 0.007s), max rss 10160K
END *)
